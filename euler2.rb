#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



def fibonacci(max_value)
	sum = 0
	x = [1, 2]
	while sum <= max_value
		length = x.length
		sum = x[length - 1] + x[length - 2]
		x.push(sum) unless sum > max_value
	end
	
	x.select! { |i| i % 2 == 0 }
	
	sum_evens = 0 
	x.each { |i| 
		sum_evens = sum_evens + i 
	}
	puts sum_evens
end

	puts <<PARAGRAPH 
This program evaluates the sum of even numbers 
in the Fibonacci sequence up to and including a number.
Up to what number shall we sum evens from the 
Fibonacci sequence? 
PARAGRAPH

max_value = gets.chomp.to_i
fibonacci(max_value)